data <- read_csv("/data/pilotA.csv")
library(tidyverse)
library(mediation)
#### Import data
data <- read_csv("/data/pilotA.csv")
library(tidyverse)
library(mediation)
#### Import data
data <- read_csv("../data/pilotA.csv")
data <- data %>%
filter(consent == "I agree") # Exclude those who didn't give consent
# select relevant columns
data <- data %>%
dplyr::select(IH_1:IH_C4, # inherence heuristic scale
O_1, O_2, O_3, O_4, O_5, O_6, # ought inferences
condition, # control (=control) or anti-inherence treatment (=anti_inherence)
SurveyOrder, # inherence heuristic scale first (=IH_O) vs ought inferences first (=O_IH)
attn)# attention check
# Add subject ID
data <- mutate(data, subject = row_number())
# Add subject ID
data <- mutate(data, subject = row_number(IH_1))
require("knitr")
opts_knit$set(root.dir = "C:/Users/Marianna/Desktop/Dropbox/Stanford/methods/tworek2016")
library(tidyverse)
library(mediation)
#### Import data
data <- read_csv("/data/pilotA.csv")
library(tidyverse)
library(mediation)
#### Import data
data <- read_csv("data/pilotA.csv")
require("knitr")
opts_knit$set(root.dir = "C:/Users/Marianna/Desktop/Dropbox/Stanford/methods/tworek2016")
library(tidyverse)
library(mediation)
#### Import data
data <- read_csv("data/pilotA.csv")
#### Import data
data <- read_csv("../data/pilotA.csv")
# select relevant columns
data <- data %>%
dplyr::select(IH_1:IH_C4, # inherence heuristic scale
O_1, O_2, O_3, O_4, O_5, O_6, # ought inferences
condition, # control (=control) or anti-inherence treatment (=anti_inherence)
SurveyOrder, # inherence heuristic scale first (=IH_O) vs ought inferences first (=O_IH)
attn)# attention check
# Add subject ID
data <- mutate(data, subject = row_number())
# Remove all strings (mainly Likert scale labels)
data <- data %>%
mutate_at(vars(IH_1:O_6), ~gsub("([a-z]|[A-Z]|\\s)*", "", .)) %>%
mutate_at(vars(IH_1:O_6), as.numeric)
#### Data exclusion / filtering
data <- data %>%
filter(attn == "Yes" | # Exclude those who didn't pay attention
IH_C1 <=5 | IH_C2 <=5 | IH_C3 >= 5 | IH_C4 >= 5) %>% # Exclude those who failed control questions on the inherence heuristic scale
dplyr::select(-attn, -(IH_C1:IH_C4)) # Delete attn and inherence heuristic scale control columns
#### Prepare data for analysis - create columns etc.
# gather to tidy long form
data_tidy <- data %>%
gather(question, response, IH_1:O_6)
# classify items as inherence heuristic questions vs ought questions
data_tidy <- data_tidy %>%
separate(question, c("question_type", "question_number"), "_")
# summarize inherence bias average and ought measure average across conditions
data_means <- data_tidy %>%
group_by(condition, question_type) %>%
summarize(avg=mean(response, na.rm=TRUE), sd=sd(response, na.rm=TRUE), n())
data_means
require("knitr")
opts_knit$set(root.dir = "C:/Users/Marianna/Desktop/Dropbox/Stanford/methods/tworek2016")
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(mediation)
#### Import data
data <- read_csv("data/pilotB.csv")
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
library(mediation)
#### Import data
data <- read_csv("../data/pilotB.csv")
#### Initial data formatting
# Filter out those who didn't consent
data <- data %>%
filter(consent == "I agree") # Exclude those who didn't give consent
# select relevant columns
data <- data %>%
dplyr::select(IH_1:IH_C4, # inherence heuristic scale
O_1, O_2, O_3, O_4, O_5, O_6, # ought inferences
condition, # control (=control) or anti-inherence treatment (=anti_inherence)
SurveyOrder, # inherence heuristic scale first (=IH_O) vs ought inferences first (=O_IH)
attn)# attention check
# Add subject ID
data <- mutate(data, subject = row_number())
# Remove all strings (mainly Likert scale labels)
data <- data %>%
mutate_at(vars(IH_1:O_6), ~gsub("([a-z]|[A-Z]|\\s)*", "", .)) %>%
mutate_at(vars(IH_1:O_6), as.numeric)
#### Data exclusion / filtering
data <- data %>%
filter(attn == "Yes" | # Exclude those who didn't pay attention
IH_C1 <=5 | IH_C2 <=5 | IH_C3 >= 5 | IH_C4 >= 5) %>% # Exclude those who failed control questions on the inherence heuristic scale
dplyr::select(-attn, -(IH_C1:IH_C4)) # Delete attn and inherence heuristic scale control columns
#### Prepare data for analysis - create columns etc.
# gather to tidy long form
data_tidy <- data %>%
gather(question, response, IH_1:O_6)
# classify items as inherence heuristic questions vs ought questions
data_tidy <- data_tidy %>%
separate(question, c("question_type", "question_number"), "_")
# summarize inherence bias average and ought measure average across conditions
data_means <- data_tidy %>%
group_by(condition, question_type) %>%
summarize(avg=mean(response, na.rm=TRUE), sd=sd(response, na.rm=TRUE), n())
data_means
## Manipulation check: t-test between conditions on inherence heuristic scale
t.test(response ~ condition, data_tidy, subset = question_type == "IH")
## Effects of manipulation on ought inferences: t-test between conditions on ought measure
t.test(response ~ condition, data_tidy, subset = question_type == "O")
## Effects of manipulation on ought inferences via inherence bias: mediation analysis from condition to inherence heuristic scale to ought measure
# Average inherence bias and ought measure per subject
data_means_subj <- data_tidy %>%
group_by(subject, condition, question_type) %>%
summarize(avg=mean(response, na.rm=TRUE)) %>%
spread(question_type, avg)
# condition coded as 0 (=control) or 1 (=anti_inherence) factor
data_means_subj$condition <- gsub('control', '0', data_means_subj$condition)
data_means_subj$condition <- gsub('anti_inherence', '1', data_means_subj$condition)
data_means_subj$condition <- as.numeric(as.character(data_means_subj$condition))
# condition to ought measure (x->y)
model.0 <- lm(O ~ condition, data_means_subj)
summary(model.0)
# condition to inherence bias (x->m)
model.M <- lm(IH ~ condition, data_means_subj)
summary(model.M)
# condition and inherence bias to ought measure (x+m -> y)
model.Y <- lm(O ~ condition + IH, data_means_subj)
summary(model.Y)
set.seed(1234)
results <- mediation::mediate(model.M, model.Y, treat="condition", mediator="IH", boot=TRUE, sims=500)
summary(results)
require("knitr")
opts_knit$set(root.dir = "C:/Users/Marianna/Desktop/Dropbox/Stanford/methods/tworek2016")
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
#### Import data for analysis
data <- read_csv("../data/Exp1_pilotA.csv")
#### Initial data formatting
# Filter out those who didn't consent
data <- data %>%
filter(consent == "I agree") # Exclude those who didn't give consent
# select relevant columns
data <- data %>%
dplyr::select(IH_1:IH_C4, # inherence heuristic scale
O_1, O_2, O_3, O_4, O_5, O_6, # ought inferences
attn)# attention check
# select relevant columns
data <- data %>%
dplyr::select(IH_1:IH_C2, # inherence heuristic scale
O_1, O_2, O_3, O_4, O_5, O_6, # ought inferences
attn)# attention check
# Add subject ID
data <- mutate(data, subject = row_number())
# Remove all strings (mainly Likert scale labels)
data <- data %>%
mutate_at(vars(IH_1:O_6), ~gsub("([a-z]|[A-Z]|\\s)*", "", .)) %>%
mutate_at(vars(IH_1:O_6), as.numeric)
data
#### Data exclusion / filtering
data <- data %>%
filter(attn == "Yes" | # Exclude those who didn't pay attention
IH_C1 !=3 | IH_C2 !=7) %>% # Exclude those who failed control questions on the inherence heuristic scale
dplyr::select(-attn, -(IH_C1:IH_C2)) # Delete attn and inherence heuristic scale control columns
data
#### Prepare data for analysis - create columns etc.
# gather to tidy long form
data_tidy <- data %>%
gather(question, response, IH_1:O_6)
# classify items as inherence heuristic questions vs ought questions
data_tidy <- data_tidy %>%
separate(question, c("question_type", "question_number"), "_")
# summarize inherence bias average and ought measure average across subjects
data_means <- data_tidy %>%
group_by(question_type) %>%
summarize(avg=mean(response, na.rm=TRUE), sd=sd(response, na.rm=TRUE), n())
data_means
# summarize inherence bias and ought measure per subject
data_means_subj <- data_tidy %>%
group_by(subject, question_type) %>%
summarize(avg=mean(response, na.rm=TRUE)) %>%
spread(question_type, avg)
data_means_subj
cor.test(data_means_subj$IH, data_means_subj$O, method = "pearson")
