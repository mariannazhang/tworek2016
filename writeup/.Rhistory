data <- data %>%
filter(consent == "I agree")
# Select relevant columns
data <- data %>%
dplyr::select(IH_1:IH_C2, # inherence heuristic scale
O_1, O_2, O_3, O_4, O_5, O_6, # ought inferences
attn, # attention check
debrief_1:debrief_4,
dataset) # debriefing
# Add subject ID
data <- mutate(data, subject = row_number())
# Remove all strings in task response columns (mainly Likert scale labels)
data <- data %>%
mutate_at(vars(IH_1:O_6), ~gsub("([a-z]|[A-Z]|\\s)*", "", .)) %>%
mutate_at(vars(IH_1:O_6), as.numeric)
#### Data exclusion / filtering
## Record exclusions
# replace NAs in debriefing questions with text " " to prep for str_detect, which can't handle NAs
data$debrief_1 <- str_replace_na(data$debrief_1, " ")
data$debrief_2 <- str_replace_na(data$debrief_2, " ")
data$debrief_3 <- str_replace_na(data$debrief_1, " ")
data$debrief_4 <- str_replace_na(data$debrief_1, " ")
# record exclusions
data_excl <- tibble(
attn = sum(data$attn != "Yes" | is.na(data$attn)),
IH_C = sum(data$IH_C1 != 3 | is.na(data$IH_C1))
+ sum(data$IH_C2 != 7 | is.na(data$IH_C2)),
non_naive = sum(str_detect(data$debrief_1, "is-ought"))
+ sum(str_detect(data$debrief_2, "is-ought"))
+ sum(str_detect(data$debrief_3, "is-ought"))
+ sum(str_detect(data$debrief_4, "is-ought")))
data_excl
## Excluding subjects
data <- data %>%
filter(attn == "Yes" & # Exclude those who didn't pay attention
IH_C1 == 3 & IH_C2 == 7 & # Exclude those who didn't answer correctly on control questions on the inherence heuristic scale
!str_detect(debrief_1, "is-ought") &
!str_detect(debrief_2, "is-ought") &
!str_detect(debrief_3, "is-ought") &
!str_detect(debrief_4, "is-ought")) %>%  # Exclude those who mentioned "is-ought" in debriefing
select(-attn, -(IH_C1:IH_C2), -(debrief_1:debrief_4)) # Delete attn and inherence heuristic scale control columns
#### Prepare data for analysis - create columns etc.
# gather to tidy long form
data_tidy <- data %>%
gather(question, response, IH_1:O_6)
# classify items as inherence heuristic questions vs ought questions
data_tidy <- data_tidy %>%
separate(question, c("question_type", "question_number"), "_")
# summarize inherence bias average and ought measure average across subjects
data_means <- data_tidy %>%
group_by(question_type) %>%
summarize(avg=mean(response, na.rm=TRUE), sd=sd(response, na.rm=TRUE), n())
data_means
# summarize inherence bias and ought measure per subject
data_means_subj <- data_tidy %>%
group_by(subject, question_type, dataset) %>%
summarize(avg=mean(response, na.rm=TRUE)) %>%
spread(question_type, avg)
data_means_subj
# A short analysis of participant demographics. Participant demographics may be a big reason why you get the result you do, so it'll be important for readers to know about them.
# If time - scatterplot of inherence bias measure and ought measure in original data
# scatterplot of inherence bias measure and ought measure
ggplot(data_means_subj, aes(x = IH, y = O, color = dataset)) +
geom_point() +
labs(x="Inherence bias measure",
y="Ought measure") +
geom_smooth(method = "lm") +
# Ought measure is 1 to 9 scale
scale_y_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
# Inherence bias measure is 1 to 9 scale
scale_x_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
ggtitle("Inherence bias measure is correlated with ought measure")
# Pearson correlation between each subject's inherence bias measure and their ought measure
cor <- cor.test(data_means_subj$IH, data_means_subj$O, method = "pearson")
cor
# difference between this correlation and original study's correlation (r(120) = .30, 95% CI = [.13, .46], p < .001)
diff_cor <- cor$estimate - 0.30
diff_cor
View(data)
View(data_means_subj)
# scatterplot of inherence bias measure and ought measure
ggplot(data_means_subj, aes(x = IH, y = O, color = dataset)) +
geom_point() +
labs(x="Inherence bias measure",
y="Ought measure") +
geom_smooth(method = "lm") +
# Ought measure is 1 to 9 scale
scale_y_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
# Inherence bias measure is 1 to 9 scale
scale_x_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
ggtitle("Inherence bias measure is correlated with ought measure")
cor <- cor.test(data_means_subj$IH, data_means_subj$O, method = "pearson")
cor
colnames(data_B)
str(data_B)
View(data_B)
data_B <- data_B %>%
mutate(duration = StartDate - EndDate)
data_B$StartDate
# Filter out those who didn't consent
data_B <- data_B %>%
filter(consent == "I agree")
# duration analysis
data_B <- data_B %>%
mutate(duration = StartDate - EndDate)
str(data_B)
?as.Date
data_B$StartDate
# duration analysis
data_B$StartDate <- as.Date(data_B$StartDate, "%m/%d/%y %h:%m")
data_B$StartDate
data_Exp1_duration <- read_csv("Exp1_pilotB_duration.csv")
# histogram of age
ggplot(data_Exp1_duration, aes(x = duration)) +
geom_histogram(binwidth=1) +
labs(x="Duration (min)",
y="Number of participants") +
xlim(0, 30) +
scale_y_continuous(breaks=seq(0,2,1)) +
ggtitle("Exp 1 duration for Pilot B participants (n=3)")
library(tidyverse)
library(ggthemes)
theme_set(theme_few())
# Exp 4
data_Exp4_duration <- read_csv("Exp4_pilotB_duration.csv")
# histogram of duration
ggplot(data_Exp4_duration, aes(x = duration)) +
geom_histogram(binwidth=1) +
labs(x="Duration (min)",
y="Number of participants") +
xlim(0, 30) +
scale_y_continuous(breaks=seq(0,2,1)) +
ggtitle("Exp 4 duration for Pilot B participants (n=9)")
library(tidyverse)
library(ggthemes)
theme_set(theme_few())
# Exp 4
data_Exp4_duration <- read_csv("Exp4_pilotB_duration.csv")
# Exp 4
data_Exp4_duration <- read_csv("../Exp4_pilotB_duration.csv")
# histogram of duration
ggplot(data_Exp4_duration, aes(x = duration)) +
geom_histogram(binwidth=1) +
labs(x="Duration (min)",
y="Number of participants") +
xlim(0, 30) +
scale_y_continuous(breaks=seq(0,2,1)) +
ggtitle("Exp 4 duration for Pilot B participants (n=9)")
# Exp 4
data_Exp4_duration <- read_csv("../Exp4_pilotB_duration.csv")
# Exp 4
data_Exp4_duration <- read_csv("../data/Exp4_pilotB_duration.csv")
# histogram of duration
ggplot(data_Exp4_duration, aes(x = duration)) +
geom_histogram(binwidth=1) +
labs(x="Duration (min)",
y="Number of participants") +
xlim(0, 30) +
scale_y_continuous(breaks=seq(0,2,1)) +
ggtitle("Exp 4 duration for Pilot B participants (n=9)")
# Exp 1
data_Exp1_duration <- read_csv("../data/Exp1_pilotB_duration.csv")
# histogram of duration
ggplot(data_Exp1_duration, aes(x = duration)) +
geom_histogram(binwidth=1) +
labs(x="Duration (min)",
y="Number of participants") +
xlim(0, 30) +
scale_y_continuous(breaks=seq(0,2,1)) +
ggtitle("Exp 1 duration for Pilot B participants (n=3)")
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
#### Import data for analysis
# pilot A = self (included because pilot B data is insufficient for analysis to run)
data_A <- read_csv("../data/Exp1_pilotA.csv")
# pilot B = naive participants (n=3)
data_B <- read_csv("../data/Exp1_pilotB.csv")
# original data
data_original <- read_csv("../data/Exp1_originalData.csv")
View(data_original)
### Scatterplot of original data
# Importing original data
data_original <- read_csv("../data/Exp1_originalData.csv")
# Filter out excluded subjects
data_original <- data_original %>%
filter(excluded == 0)
# Select relevant columns
data_original <- data_original %>%
select(inhav, # inherence heuristic scale
oughtav) # ought inferences
View(data_original)
### Scatterplot of original data
# Importing original data
data_original <- read_csv("../data/Exp1_originalData.csv")
# Filter out excluded subjects
data_original <- data_original %>%
filter(excluded == 0)
View(data_original)
### Scatterplot of original data
# Importing original data
data_original <- read_csv("../data/Exp1_originalData.csv")
# Add subject ID
data_original <- mutate(data_original, subject = row_number())
# Filter out excluded subjects
data_original <- data_original %>%
filter(excluded == 0)
# Select relevant columns
data_original <- data_original %>%
select(inhav, # inherence heuristic scale
oughtav, # ought inferences
subject) # subject ID
View(data_original)
?rename
### Scatterplot of original data
# Importing original data
data_original <- read_csv("../data/Exp1_originalData.csv")
# Add subject ID
data_original <- mutate(data_original, subject = row_number())
# Filter out excluded subjects
data_original <- data_original %>%
filter(excluded == 0)
# Select relevant columns
data_original <- data_original %>%
select(inhav, # inherence heuristic scale
oughtav, # ought inferences
subject) # subject ID
# Rename columns to be same as replication data
data_original <- data_original %>%
rename(inhav = IH,
oughtav = O)
### Scatterplot of original data
# Importing original data
data_original <- read_csv("../data/Exp1_originalData.csv")
# Add subject ID
data_original <- mutate(data_original, subject = row_number())
# Filter out excluded subjects
data_original <- data_original %>%
filter(excluded == 0)
# Select relevant columns
data_original <- data_original %>%
select(inhav, # inherence heuristic scale
oughtav, # ought inferences
subject) # subject ID
# Rename columns to be same as replication data
data_original <- data_original %>%
rename(IH = inhav,
O = oughtav)
# scatterplot of inherence bias measure and ought measure
ggplot(data_original, aes(x = IH, y = O)) +
geom_point() +
labs(x="Inherence bias measure",
y="Ought measure") +
geom_smooth(method = "lm") +
# Ought measure is 1 to 9 scale
scale_y_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
# Inherence bias measure is 1 to 9 scale
scale_x_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
ggtitle("Replication: inherence bias measure and ought measure correlation")
# Pearson correlation between each subject's inherence bias measure and their ought measure
cor_original <- cor.test(data_original$IH, data_original$O, method = "pearson")
cor_original
### Comparing replication data with original data
# difference between this correlation and original study's correlation (r(120) = .30, 95% CI = [.13, .46], p < .001)
diff_cor <- cor$estimate - cor_original$estimate
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
#### Import data for analysis
# pilot A = self (included because pilot B data is insufficient for analysis to run)
data_A <- read_csv("../data/Exp1_pilotA.csv")
# pilot B = naive participants (n=3)
data_B <- read_csv("../data/Exp1_pilotB.csv")
#### Initial data formatting
# combine data
data_A <- mutate(data_A, dataset = "pilotA")
data_B <- mutate(data_B, dataset = "pilotB")
data <- bind_rows(data_A, data_B)
# Filter out those who didn't consent
data <- data %>%
filter(consent == "I agree")
# Select relevant columns
data <- data %>%
dplyr::select(IH_1:IH_C2, # inherence heuristic scale
O_1, O_2, O_3, O_4, O_5, O_6, # ought inferences
attn, # attention check
debrief_1:debrief_4,
dataset) # debriefing
# Add subject ID
data <- mutate(data, subject = row_number())
# Remove all strings in task response columns (mainly Likert scale labels)
data <- data %>%
mutate_at(vars(IH_1:O_6), ~gsub("([a-z]|[A-Z]|\\s)*", "", .)) %>%
mutate_at(vars(IH_1:O_6), as.numeric)
#### Data exclusion / filtering
## Record exclusions
# replace NAs in debriefing questions with text " " to prep for str_detect, which can't handle NAs
data$debrief_1 <- str_replace_na(data$debrief_1, " ")
data$debrief_2 <- str_replace_na(data$debrief_2, " ")
data$debrief_3 <- str_replace_na(data$debrief_1, " ")
data$debrief_4 <- str_replace_na(data$debrief_1, " ")
# record exclusions
data_excl <- tibble(
attn = sum(data$attn != "Yes" | is.na(data$attn)),
IH_C = sum(data$IH_C1 != 3 | is.na(data$IH_C1))
+ sum(data$IH_C2 != 7 | is.na(data$IH_C2)),
non_naive = sum(str_detect(data$debrief_1, "is-ought"))
+ sum(str_detect(data$debrief_2, "is-ought"))
+ sum(str_detect(data$debrief_3, "is-ought"))
+ sum(str_detect(data$debrief_4, "is-ought")))
data_excl
## Excluding subjects
data <- data %>%
filter(attn == "Yes" & # Exclude those who didn't pay attention
IH_C1 == 3 & IH_C2 == 7 & # Exclude those who didn't answer correctly on control questions on the inherence heuristic scale
!str_detect(debrief_1, "is-ought") &
!str_detect(debrief_2, "is-ought") &
!str_detect(debrief_3, "is-ought") &
!str_detect(debrief_4, "is-ought")) %>%  # Exclude those who mentioned "is-ought" in debriefing
select(-attn, -(IH_C1:IH_C2), -(debrief_1:debrief_4)) # Delete attn and inherence heuristic scale control columns
#### Prepare data for analysis - create columns etc.
# gather to tidy long form
data_tidy <- data %>%
gather(question, response, IH_1:O_6)
# classify items as inherence heuristic questions vs ought questions
data_tidy <- data_tidy %>%
separate(question, c("question_type", "question_number"), "_")
# summarize inherence bias average and ought measure average across subjects
data_means <- data_tidy %>%
group_by(question_type) %>%
summarize(avg=mean(response, na.rm=TRUE), sd=sd(response, na.rm=TRUE), n())
data_means
# summarize inherence bias and ought measure per subject
data_means_subj <- data_tidy %>%
group_by(subject, question_type, dataset) %>%
summarize(avg=mean(response, na.rm=TRUE)) %>%
spread(question_type, avg)
data_means_subj
# A short analysis of participant demographics. Participant demographics may be a big reason why you get the result you do, so it'll be important for readers to know about them.
### Analysis of replication data
# scatterplot of inherence bias measure and ought measure
ggplot(data_means_subj, aes(x = IH, y = O)) +
geom_point() +
labs(x="Inherence bias measure",
y="Ought measure") +
geom_smooth(method = "lm") +
# Ought measure is 1 to 9 scale
scale_y_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
# Inherence bias measure is 1 to 9 scale
scale_x_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
ggtitle("Replication: inherence bias measure and ought measure correlation")
# Pearson correlation between each subject's inherence bias measure and their ought measure
cor <- cor.test(data_means_subj$IH, data_means_subj$O, method = "pearson")
cor
### Scatterplot of original data
# Importing original data
data_original <- read_csv("../data/Exp1_originalData.csv")
# Add subject ID
data_original <- mutate(data_original, subject = row_number())
# Filter out excluded subjects
data_original <- data_original %>%
filter(excluded == 0)
# Select relevant columns
data_original <- data_original %>%
select(inhav, # inherence heuristic scale
oughtav, # ought inferences
subject) # subject ID
# Rename columns to be same as replication data
data_original <- data_original %>%
rename(IH = inhav,
O = oughtav)
# scatterplot of inherence bias measure and ought measure
ggplot(data_original, aes(x = IH, y = O)) +
geom_point() +
labs(x="Inherence bias measure",
y="Ought measure") +
geom_smooth(method = "lm") +
# Ought measure is 1 to 9 scale
scale_y_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
# Inherence bias measure is 1 to 9 scale
scale_x_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
ggtitle("Replication: inherence bias measure and ought measure correlation")
# Pearson correlation between each subject's inherence bias measure and their ought measure
cor_original <- cor.test(data_original$IH, data_original$O, method = "pearson")
cor_original
### Comparing replication data with original data
# difference between this correlation and original study's correlation (r(120) = .30, 95% CI = [.13, .46], p < .001)
diff_cor <- cor$estimate - cor_original$estimate
diff_cor
### Analysis of replication data
# scatterplot of inherence bias measure and ought measure
ggplot(data_means_subj, aes(x = IH, y = O)) +
geom_point() +
labs(x="Inherence bias measure",
y="Ought measure") +
geom_smooth(method = "lm") +
# Ought measure is 1 to 9 scale
scale_y_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
# Inherence bias measure is 1 to 9 scale
scale_x_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
ggtitle("Replication: inherence bias measure and ought measure correlation")
# Pearson correlation between each subject's inherence bias measure and their ought measure
cor <- cor.test(data_means_subj$IH, data_means_subj$O, method = "pearson")
cor
### Scatterplot of original data
# Importing original data
data_original <- read_csv("../data/Exp1_originalData.csv")
# Add subject ID
data_original <- mutate(data_original, subject = row_number())
# Filter out excluded subjects
data_original <- data_original %>%
filter(excluded == 0)
# Select relevant columns
data_original <- data_original %>%
select(inhav, # inherence heuristic scale
oughtav, # ought inferences
subject) # subject ID
# Rename columns to be same as replication data
data_original <- data_original %>%
rename(IH = inhav,
O = oughtav)
# scatterplot of inherence bias measure and ought measure
ggplot(data_original, aes(x = IH, y = O)) +
geom_point() +
labs(x="Inherence bias measure",
y="Ought measure") +
geom_smooth(method = "lm") +
# Ought measure is 1 to 9 scale
scale_y_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
# Inherence bias measure is 1 to 9 scale
scale_x_continuous(limits=c(1,9), breaks=seq(1, 9, 1)) +
ggtitle("Original: inherence bias measure and ought measure correlation")
# Pearson correlation between each subject's inherence bias measure and their ought measure
cor_original <- cor.test(data_original$IH, data_original$O, method = "pearson")
cor_original
### Comparing replication data with original data
# difference between this correlation and original study's correlation (r(120) = .30, 95% CI = [.13, .46], p < .001)
diff_cor <- cor$estimate - cor_original$estimate
diff_cor
### Data Preparation
#### Load Relevant Libraries and Functions
library(tidyverse)
#### Import data for analysis
# pilot A = self (included because pilot B data is insufficient for analysis to run)
data_A <- read_csv("../data/Exp1_pilotA.csv")
# pilot B = naive participants (n=3)
data_B <- read_csv("../data/Exp1_pilotB.csv")
#### Initial data formatting
# combine data
data_A <- mutate(data_A, dataset = "pilotA")
data_B <- mutate(data_B, dataset = "pilotB")
data <- bind_rows(data_A, data_B)
# Filter out those who didn't consent
data <- data %>%
filter(consent == "I agree")
# Select relevant columns
data <- data %>%
dplyr::select(IH_1:IH_C2, # inherence heuristic scale
O_1, O_2, O_3, O_4, O_5, O_6, # ought inferences
attn, # attention check
debrief_1:debrief_4, # debriefing
gender, age, education, income, religion, race, conservatism, English, #demographics
dataset) # pilot A vs pilot B
# Add subject ID
data <- mutate(data, subject = row_number())
# Remove all strings in task response columns (mainly Likert scale labels)
data <- data %>%
mutate_at(vars(IH_1:O_6), ~gsub("([a-z]|[A-Z]|\\s)*", "", .)) %>%
mutate_at(vars(IH_1:O_6), as.numeric)
#### Data exclusion / filtering
# replace NAs in debriefing questions with text " " to prep for str_detect, which can't handle NAs
data$debrief_1 <- str_replace_na(data$debrief_1, " ")
data$debrief_2 <- str_replace_na(data$debrief_2, " ")
data$debrief_3 <- str_replace_na(data$debrief_1, " ")
data$debrief_4 <- str_replace_na(data$debrief_1, " ")
# record exclusions
data_excl <- tibble(
attn = sum(data$attn != "Yes" | is.na(data$attn)),
IH_C = sum(data$IH_C1 != 3 | is.na(data$IH_C1))
+ sum(data$IH_C2 != 7 | is.na(data$IH_C2)),
non_naive = sum(str_detect(data$debrief_1, "is-ought"))
+ sum(str_detect(data$debrief_2, "is-ought"))
+ sum(str_detect(data$debrief_3, "is-ought"))
+ sum(str_detect(data$debrief_4, "is-ought")))
data_excl
# Excluding subjects
data <- data %>%
filter(attn == "Yes" & # Exclude those who didn't pay attention
IH_C1 == 3 & IH_C2 == 7 & # Exclude those who didn't answer correctly on control questions on the inherence heuristic scale
!str_detect(debrief_1, "is-ought") &
!str_detect(debrief_2, "is-ought") &
!str_detect(debrief_3, "is-ought") &
!str_detect(debrief_4, "is-ought")) %>%  # Exclude those who mentioned "is-ought" in debriefing
select(-attn, -(IH_C1:IH_C2), -(debrief_1:debrief_4)) # Delete attn and inherence heuristic scale control columns
View(data)
?count
data_demographics_gender <- data %>%
count(gender)
data_demographics_gender
data_demographics_age <- data %>%
count(age)
data_demographics_age
data_demographics_education <- data %>%
count(education)
data_demographics_education
data_demographics_income <- data %>%
count(income)
data_demographics_income
data_demographics_religion <- data %>%
count(religion)
data_demographics_religion
?count
